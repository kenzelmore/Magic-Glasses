#!/usr/bin/env python3

import RPi.GPIO as GPIO  # Import the GPIO library for Raspberry Pi
import time  # Import the time library for time-related functions

# Define GPIO pin numbers
TRIG = 11    # Pin for sending a signal to the ultrasonic sensor
ECHO = 12    # Pin for receiving the signal from the ultrasonic sensor
BUZZER = 13  # Pin for the buzzer

def setup():
    # Set up the GPIO mode and suppress warnings
    GPIO.setmode(GPIO.BOARD)  # Use the physical pin numbering
    GPIO.setwarnings(False)  # Disable GPIO warnings
    
    # Set TRIG as output and ECHO as input
    GPIO.setup(TRIG, GPIO.OUT)  # Set TRIG as an output pin
    GPIO.setup(ECHO, GPIO.IN)   # Set ECHO as an input pin
    
    # Set up BUZZER as output
    GPIO.setup(BUZZER, GPIO.OUT)  # Set BUZZER as an output pin

def distance():
    # Send a short pulse to trigger the ultrasonic sensor
    GPIO.output(TRIG, 0)
    time.sleep(0.000002)
    GPIO.output(TRIG, 1)
    time.sleep(0.00001)
    GPIO.output(TRIG, 0)

    # Measure the duration of the pulse on the ECHO pin
    while GPIO.input(ECHO) == 0:
        pass
    time1 = time.time()
    
    while GPIO.input(ECHO) == 1:
        pass
    time2 = time.time()

    # Calculate the distance based on the time duration
    during = time2 - time1
    return during * 340 / 2 * 39.37  # Convert to inches

def loop():
    try:
        while True:
            # Get the distance and print it
            dis = distance()
            print(f'Distance: {dis:.2f} inches')
            
            # Activate buzzer if the distance is less than or equal to 30 inches
            if dis <= 30:
                GPIO.output(BUZZER, GPIO.LOW)  # Turn on the buzzer
                time.sleep(0.1)
            else:
                GPIO.output(BUZZER, GPIO.HIGH)  # Turn off the buzzer
            
            time.sleep(0.1)
    except KeyboardInterrupt:
        # Handle keyboard interrupt by calling the destroy function
        destroy()

def destroy():
    # Clean up GPIO settings
    GPIO.cleanup()

if __name__ == "__main__":
    # Call the setup function
    setup()
    
    try:
        # Call the loop function
        loop()
    except KeyboardInterrupt:
        # Handle keyboard interrupt by calling the destroy function
        destroy()
