import RPi.GPIO as GPIO
import time

# Set up GPIO
GPIO.setmode(GPIO.BCM)

# Ultrasonic sensor
TRIG = 23
ECHO = 24
GPIO.setup(TRIG, GPIO.OUT)
GPIO.setup(ECHO, GPIO.IN)

# Active buzzer
BUZZER_PIN = 12
GPIO.setup(BUZZER_PIN, GPIO.OUT)

# PIR sensor
PIR_PIN = 17
GPIO.setup(PIR_PIN, GPIO.IN)

def ultrasonic_distance():
    # Send trigger signal
    GPIO.output(TRIG, True)
    time.sleep(0.00001)
    GPIO.output(TRIG, False)

    # Measure the response signal from the sensor
    while GPIO.input(ECHO) == 0:
        pulse_start = time.time()
    while GPIO.input(ECHO) == 1:
        pulse_end = time.time()

    # Calculate distance
    pulse_duration = pulse_end - pulse_start
    distance = pulse_duration * 17150
    distance = round(distance, 2)
    return distance

try:
    print("Sensors Active (CTRL+C to exit)")
    time.sleep(2)
    print("Ready")

    while True:
        distance = ultrasonic_distance()
        if distance < 91.44:  # 3 feet in cm
            print("Object Detected within 3 feet!")
            GPIO.output(BUZZER_PIN, GPIO.HIGH)  # Turn on buzzer
        else:
            GPIO.output(BUZZER_PIN, GPIO.LOW)  # Turn off buzzer

        if GPIO.input(PIR_PIN):
            print("Motion Detected!")
        time.sleep(0.1)

except KeyboardInterrupt:
    print("Quit")
    GPIO.cleanup()
