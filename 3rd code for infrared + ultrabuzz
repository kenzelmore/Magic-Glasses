#!/usr/bin/env python3

import RPi.GPIO as GPIO  # Import the RPi.GPIO library for Raspberry Pi GPIO operations
import time

TRIG = 11      # GPIO pin for ultrasonic sensor trigger
ECHO = 12      # GPIO pin for ultrasonic sensor echo
BUZZER = 13    # GPIO pin for the buzzer
IR_SENSOR = 18  # GPIO pin for the infrared sensor

def setup():
    GPIO.setmode(GPIO.BOARD)  # Set the GPIO mode to use board pin numbers
    GPIO.setwarnings(False)  # Disable GPIO warnings
    GPIO.setup(TRIG, GPIO.OUT)  # Set TRIG pin as an output
    GPIO.setup(ECHO, GPIO.IN)   # Set ECHO pin as an input
    GPIO.setup(BUZZER, GPIO.OUT)  # Set BUZZER pin as an output
    GPIO.setup(IR_SENSOR, GPIO.IN)  # Set IR_SENSOR pin as an input

def distance():
    GPIO.output(TRIG, 0)  # Set TRIG pin to low
    time.sleep(0.000002)  # Wait for 2 microseconds

    GPIO.output(TRIG, 1)  # Set TRIG pin to high
    time.sleep(0.00001)   # Wait for 10 microseconds
    GPIO.output(TRIG, 0)  # Set TRIG pin to low

    while GPIO.input(ECHO) == 0:
        pass
    time1 = time.time()
    while GPIO.input(ECHO) == 1:
        pass
    time2 = time.time()

    during = time2 - time1
    return during * 340 / 2 * 39.37  # Convert to inches

def loop():
    try:
        while True:
            dis = distance()
            print(f'Distance: {dis:.2f} inches')

            sensor_value = GPIO.input(IR_SENSOR)
            print(f"IR Sensor Value: {sensor_value}")

            if sensor_value == 1:
                print("I SEE HUMAN !!")
            else:
                print("I SEE OBJECT !!")

            if dis <= 30:
                GPIO.output(BUZZER, GPIO.LOW)  # Turn off the buzzer
            else:
                GPIO.output(BUZZER, GPIO.HIGH)  # Turn on the buzzer
            time.sleep(0.1)
    except KeyboardInterrupt:
        destroy()

def destroy():
    GPIO.cleanup()  # Clean up GPIO settings when the program is terminated

if __name__ == "__main__":
    setup()  # Call the setup function to initialize GPIO settings
    try:
        loop()  # Call the main loop function
    except KeyboardInterrupt:
        destroy()  # Call the destroy function if the program is interrupted by a keyboard interrupt
