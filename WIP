import RPi.GPIO as GPIO
import time

# Define GPIO pins for ultrasonic sensor
TRIG_PIN = 11
ECHO_PIN = 12

# Define GPIO pin for the active buzzer
BUZZER_PIN = 13

# Set GPIO mode and setup
GPIO.setmode(GPIO.BCM)
GPIO.setup(TRIG_PIN, GPIO.OUT)
GPIO.setup(ECHO_PIN, GPIO.IN)
GPIO.setup(BUZZER_PIN, GPIO.OUT)

def measure_distance():
    # Send a 10us pulse to trigger the ultrasonic sensor
    GPIO.output(TRIG_PIN, True)
    time.sleep(0.00001)
    GPIO.output(TRIG_PIN, False)

    # Wait for the ECHO pin to go high
    start_time = time.time()
    while GPIO.input(ECHO_PIN) == 0 and time.time() - start_time < 0.1:
        pass

    # Record the start time of the pulse
    pulse_start = time.time()

    # Wait for the ECHO pin to go low
    while GPIO.input(ECHO_PIN) == 1 and time.time() - start_time < 0.1:
        pass

    # Record the end time of the pulse
    pulse_end = time.time()

    # Calculate the pulse duration and convert it to distance
    pulse_duration = pulse_end - pulse_start
    distance = pulse_duration * 17150  # Speed of sound is 343 meters/second

    return distance

try:
    while True:
        # Measure distance
        distance = measure_distance()
        print(f"Distance: {distance:.2f} cm")

        # Check if the distance is less than or equal to 30 inches (76.2 cm)
        if distance <= 76.2:
            # Turn on the buzzer
            GPIO.output(BUZZER_PIN, GPIO.HIGH)
        else:
            # Turn off the buzzer
            GPIO.output(BUZZER_PIN, GPIO.LOW)

        # Wait for a short time before taking the next measurement
        time.sleep(0.5)

except KeyboardInterrupt:
    print("Measurement stopped by the user")
    GPIO.cleanup()
